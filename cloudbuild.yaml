steps:
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/frontend", "./client"]

  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/backend", "./server"]

  # - name: "gcr.io/cloud-builders/docker"
  #   args: ["build", "-t", "gcr.io/$PROJECT_ID/nginx", "--build-arg", "nginx_proxy_conf=./nginx.conf", "."]

  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/frontend"]

  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/backend"]

  # # Deploy the backend image to Cloud Run separately
  # - name: "gcr.io/cloud-builders/gcloud"
  #   args:
  #     - "run"
  #     - "deploy"
  #     - "frontend"
  #     - "--image"
  #     - "gcr.io/$PROJECT_ID/frontend"
  #     - "--port"
  #     - "3000"
  #     - '--region'
  #     - 'us-central1'

  # # Deploy the backend image to Cloud Run separately
  # - name: "gcr.io/cloud-builders/gcloud"
  #   args:
  #     - "run"
  #     - "deploy"
  #     - "backend"
  #     - "--image"
  #     - "gcr.io/$PROJECT_ID/backend"
  #     - "--port"
  #     - "5000"
  #     - '--region'
  #     - 'us-central1' 

  # Deploy the images to Cloud Run
#  - name: "gcr.io/cloud-builders/gcloud"
#    args:
#      - "run"
#      - "deploy"
#      - "youtubed"
#      - "--image"
#      - "gcr.io/$PROJECT_ID/backend"
#      - "--port"
#      - "5000"
#      - "--image"
#      - "gcr.io/$PROJECT_ID/frontend"
#      - "--port"
#      - "3000"
#      - "--platform"
#      - "managed"
#      - "--region"
#      - "us-central1"
#      - "--allow-unauthenticated"

#  - name: 'gcr.io/cloud-builders/gcloud'
#    args:
#      - 'container'
#      - 'clusters'
#      - 'my-cluster'
#      - 'get-credentials'
#      - '--zone'
#      - 'us-central1-a'
#      - '--project'
#      - '$PROJECT_ID'
#  - name: 'gcr.io/cloud-builders/kubectl'
#    args:
#      - 'apply'
#      - '-f'
#      - 'kubernetes/deployment.yaml'

#  - name: 'gcr.io/cloud-builders/gcloud'
#    args:
#      - 'container'
#      - 'clusters'
#      - 'cluster-2'
#      - 'get-credentials'
#      - '--zone'
#      - 'us-central1-a'
#      - '--project'
#      - 'big-data-arch-youtubed'
#
#  # Deploy the Kubernetes deployment configuration
#  - name: 'gcr.io/cloud-builders/kubectl'
#    args:
#      - 'apply'
#      - '-f'
#      - 'kubernetes/deployment.yaml'

  - name: 'gcr.io/cloud-builders/kubectl'
    args: [ 'apply', '-f', 'k8s/' ]
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-2'

  # Deploy the backend
  - name: 'gcr.io/cloud-builders/kubectl'
    args: [ 'set', 'image', 'deployment/backend-deployment', 'backend=gcr.io/$PROJECT_ID/backend' ]
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-2'

  # Deploy the frontend
  - name: 'gcr.io/cloud-builders/kubectl'
    args: [ 'set', 'image', 'deployment/frontend-deployment', 'frontend=gcr.io/$PROJECT_ID/frontend' ]
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-2'

images:
  - 'gcr.io/$PROJECT_ID/backend'
  - 'gcr.io/$PROJECT_ID/frontend'

#  - name: 'gcr.io/cloud-builders/gcloud'
#    entrypoint: 'bash'
#    args:
#      - '-c'
#      - |
#        gcloud auth activate-service-account --key-file=${GOOGLE_APPLICATION_CREDENTIALS}
#        gcloud config set project ${PROJECT_ID}
#        gcloud container clusters get-credentials my-cluster --zone us-central1-a
#
#  # Deploy the Kubernetes deployment configuration
#  - name: 'gcr.io/cloud-builders/kubectl'
#    args:
#      - 'apply'
#      - '-f'
#      - 'kubernetes/deployment.yaml'

  # - name: "gcr.io/cloud-builders/docker"
  #   args: ["push", "gcr.io/$PROJECT_ID/nginx"]

  # - name: "gcr.io/cloud-builders/gcloud"
  #   args: ["run", "deploy", "youtubed", "--image", "gcr.io/$PROJECT_ID/nginx", "--region", "us-central1", "--platform", "managed", "--allow-unauthenticated"]
options:
  logging: CLOUD_LOGGING_ONLY
























# steps:
# - name: 'gcr.io/cloud-builders/docker'
#   args: [ 'build', '-t', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}:$SHORT_SHA', '.' ]
# - name: 'gcr.io/cloud-builders/docker'
#   args: [ 'push', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}:$SHORT_SHA']
# - name: 'gcr.io/cloud-builders/gcloud'
#   args:
#     - 'run'
#     - 'deploy'
#     - '${_SERVICE_NAME}'
#     - '--region=${_REGION}'
#     - '--platform=managed'
#     - '--allow-unauthenticated'
#     - '--service-account=${_SERVICE_ACCOUNT_EMAIL}'
#     - '--image=gcr.io/${PROJECT_ID}/${_SERVICE_NAME}:$SHORT_SHA'
# options:
#   logging: CLOUD_LOGGING_ONLY
